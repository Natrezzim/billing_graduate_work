name: CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpis5t0f3nv1ncr2fe9
          CR_REPOSITORY: billing-api
          IMAGE_TAG: ${{ github.sha }}
        run: |
          DOCKER_BUILDKIT=1 docker build -f api/src/app/Dockerfile -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG ./api/src/app
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpis5t0f3nv1ncr2fe9
          CR_REPOSITORY: billing-nginx
          IMAGE_TAG: ${{ github.sha }}
        run: |
          DOCKER_BUILDKIT=1 docker build -f nginx/Dockerfile -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG ./nginx
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1
        env:
          CR_REGISTRY: crpis5t0f3nv1ncr2fe9
          CR_REPOSITORY: billing-repo
          IMAGE_TAG: ${{ github.sha }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          YOOKASSA_ACCOUNT_ID: ${{ secrets.YOOKASSA_ACCOUNT_ID }}
          YOOKASSA_SECRET_KEY: ${{ secrets.YOOKASSA_SECRET_KEY }}
          YOOKASSA_ACCESS_TOKEN: ${{ secrets.YOOKASSA_ACCESS_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: b1gnn1cdso7c6e7ma8rp
          VM-name: ubuntu20-billing-ci
          vm-service-account-id: ajejfodg7dvfe92vh0vv
          vm-subnet-id: e9bcllc4me68a9dtjci0
          user-data-path: './user-data.yaml'
          docker-compose-path: './docker-compose.prod.yaml'