version: '3.7'

services:

  service:
    container_name: billing_api
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-api:{{ env.IMAGE_TAG }}
    entrypoint: uvicorn app.main:app --host 0.0.0.0 --port 8010 --access-log
    ports:
      - "8010"
    environment:
      PROJECT_NAME: {{ env.PROJECT_NAME }}
      DB_HOST_BILLING: {{ env.DB_HOST_BILLING }}
      DB_PORT_BILLING: {{ env.DB_PORT_BILLING }}
      DB_NAME_BILLING: {{ env.DB_NAME_BILLING }}
      YOOKASSA_ACCOUNT_ID: {{ env.YOOKASSA_ACCOUNT_ID }}
      YOOKASSA_SECRET_KEY: {{ env.YOOKASSA_SECRET_KEY }}
      YOOKASSA_ACCESS_TOKEN: {{ env.YOOKASSA_ACCESS_TOKEN }}
      DATABASE_URL: {{ env.DATABASE_URL }}
    depends_on:
      - db

  auth_service:
    container_name: auth_api
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-auth:{{ env.IMAGE_TAG }}
    build:
      context: auth_api/src
      dockerfile: ./Dockerfile
    environment:
      FLASK_APP: src/app/app.py
      DB_HOST_AUTH: {{ env.DB_HOST_AUTH }}
      DB_PORT_AUTH: {{ env.DB_PORT_AUTH }}
      DB_NAME_AUTH: {{ env.DB_NAME_AUTH }}
      ACCESS_TOKEN_EXPIRED: {{ env.ACCESS_TOKEN_EXPIRED }}
      REFRESH_TOKEN_EXPIRED: {{ env.REFRESH_TOKEN_EXPIRED }}
      JWT_SECRET_KEY: {{ env.JWT_SECRET_KEY }}
      ROLE_START_PAGE: {{ env.ROLE_START_PAGE }}
      ROLE_PAGE_LIMIT: {{ env.ROLE_PAGE_LIMIT }}
      AUTH_HISTORY_START_PAGE: {{ env.AUTH_HISTORY_START_PAGE }}
      AUTH_HISTORY__PAGE_LIMIT: {{ env.AUTH_HISTORY__PAGE_LIMIT }}
      YANDEX_CLIENT_ID: {{ env.YANDEX_CLIENT_ID }}
      YANDEX_CLIENT_SECRET: {{ env.YANDEX_CLIENT_SECRET }}
      YANDEX_AUTHORIZE_URL: {{ env.YANDEX_AUTHORIZE_URL }}
      YANDEX_ACCESS_TOKEN_URL: {{ env.YANDEX_ACCESS_TOKEN_URL }}
      REDIS_HOST: {{ env.REDIS_HOST }}
      REDIS_PORT: {{ env.REDIS_PORT }}
      REQUEST_LIMIT_PER_MINUTE: {{ env.REQUEST_LIMIT_PER_MINUTE }}
      JAEGER_HOST: {{ env.JAEGER_HOST }}
      JAEGER_PORT: {{ env.JAEGER_PORT }}
      XCAPTCHA_SITE_KEY: {{ env.XCAPTCHA_SITE_KEY }}
      XCAPTCHA_SECRET_KEY: {{ env.XCAPTCHA_SECRET_KEY }}
    entrypoint: >
      sh -c "python -m flask db upgrade  && sleep 5 && python -m flask run --host 0.0.0.0 --port 8001 --debugger"
    expose:
      - "8001"
    depends_on:
      - db

  jaeger:
    container_name: jaeger_auth
    image: jaegertracing/all-in-one:latest
    ports:
        - "6833:6833/udp"
        - "16686:16686"

  redis:
    container_name: redis_auth
    build:
      context: auth_api/redis
      dockerfile: ./Dockerfile
    depends_on:
      - auth_service
    ports:
      - "6380:6380"

  db:
    container_name: billing_db
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-postgres:{{ env.IMAGE_TAG }}
    build:
      context: postgres
      dockerfile: ./Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_MULTIPLE_DATABASES: {{ env.POSTGRES_MULTIPLE_DATABASES }}
      POSTGRES_PASSWORD: {{ env.POSTGRES_PASSWORD }}
      POSTGRES_USER: {{ env.POSTGRES_USER }}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  nginx:
    container_name: billing_nginx
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-nginx:{{ env.IMAGE_TAG }}
    volumes:
      - certbot-conf:/etc/nginx/ssl/:ro
      - certbot-www:/var/www/certbot/:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - service

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-conf:/etc/letsencrypt/:rw
      - certbot-www:/var/www/certbot/:rw
    command: renew --dry-run
    depends_on:
      - nginx

volumes:
  postgres_data:
  certbot-conf:
  certbot-www:
