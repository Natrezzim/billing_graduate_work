version: '3.7'

services:

  service:
    container_name: billing_api
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-api:{{ env.IMAGE_TAG }}
    entrypoint: sh -c "python src/app/utils/wait_for_pg.py && uvicorn app.main:app --host 0.0.0.0 --port 8010 --access-log && python src/app/scheduler.py"
    volumes:
      - billing_log:/usr/src/app/logs
    ports:
      - "8010"
    environment:
      PROJECT_NAME: {{ env.PROJECT_NAME }}
      DB_HOST_BILLING: {{ env.DB_HOST_BILLING }}
      DB_PORT_BILLING: {{ env.DB_PORT_BILLING }}
      DB_NAME_BILLING: {{ env.DB_NAME_BILLING }}
      YOOKASSA_ACCOUNT_ID: {{ env.YOOKASSA_ACCOUNT_ID }}
      YOOKASSA_SECRET_KEY: {{ env.YOOKASSA_SECRET_KEY }}
      YOOKASSA_ACCESS_TOKEN: {{ env.YOOKASSA_ACCESS_TOKEN }}
      DATABASE_URL: {{ env.DATABASE_URL }}
      POSTGRES_USER: {{ env.POSTGRES_USER }}
      POSTGRES_PASSWORD: {{ env.POSTGRES_PASSWORD }}
      AUTH_URL: {{ env.AUTH_URL }}
      AUTH_SYNC_PATH: {{ env.AUTH_SYNC_PATH }}
      AUTH_TOKEN: {{ env.AUTH_TOKEN }}
      ADMIN_URL: {{ env.ADMIN_URL }}
      ADMIN_SYNC_PATH: {{ env.ADMIN_SYNC_PATH }}
      ADMIN_LOGIN: {{ env.ADMIN_LOGIN }}
      ADMIN_PASSWORD: {{ env.ADMIN_PASSWORD }}
    depends_on:
      - db

  auth_service:
    container_name: auth_api
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-auth:{{ env.IMAGE_TAG }}
    environment:
      FLASK_APP: src/app/app.py
      POSTGRES_PASSWORD: {{ env.POSTGRES_PASSWORD }}
      POSTGRES_USER: {{ env.POSTGRES_USER }}
      DB_HOST_AUTH: {{ env.DB_HOST_AUTH }}
      DB_PORT_AUTH: {{ env.DB_PORT_AUTH }}
      DB_NAME_AUTH: {{ env.DB_NAME_AUTH }}
      ACCESS_TOKEN_EXPIRED: {{ env.ACCESS_TOKEN_EXPIRED }}
      REFRESH_TOKEN_EXPIRED: {{ env.REFRESH_TOKEN_EXPIRED }}
      JWT_SECRET_KEY: {{ env.JWT_SECRET_KEY }}
      ROLE_START_PAGE: {{ env.ROLE_START_PAGE }}
      ROLE_PAGE_LIMIT: {{ env.ROLE_PAGE_LIMIT }}
      AUTH_HISTORY_START_PAGE: {{ env.AUTH_HISTORY_START_PAGE }}
      AUTH_HISTORY__PAGE_LIMIT: {{ env.AUTH_HISTORY__PAGE_LIMIT }}
      YANDEX_CLIENT_ID: {{ env.YANDEX_CLIENT_ID }}
      YANDEX_CLIENT_SECRET: {{ env.YANDEX_CLIENT_SECRET }}
      YANDEX_AUTHORIZE_URL: {{ env.YANDEX_AUTHORIZE_URL }}
      YANDEX_ACCESS_TOKEN_URL: {{ env.YANDEX_ACCESS_TOKEN_URL }}
      REDIS_HOST: {{ env.REDIS_HOST }}
      REDIS_PORT: {{ env.REDIS_PORT }}
      REQUEST_LIMIT_PER_MINUTE: {{ env.REQUEST_LIMIT_PER_MINUTE }}
      JAEGER_HOST: {{ env.JAEGER_HOST }}
      JAEGER_PORT: {{ env.JAEGER_PORT }}
      XCAPTCHA_SITE_KEY: {{ env.XCAPTCHA_SITE_KEY }}
      XCAPTCHA_SECRET_KEY: {{ env.XCAPTCHA_SECRET_KEY }}
    entrypoint: sh -c "python src/app/utils/wait_for_pg.py && python src/app/utils/wait_for_redis.py && python -m flask db upgrade  && sleep 5 && python -m flask run --host 0.0.0.0 --port 8001 --debugger"
    volumes:
      - auth_log:/usr/src/app/logs
    expose:
      - "8001"
    depends_on:
      - db

  admin_service:
    container_name: admin_django
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-admin:{{ env.IMAGE_TAG }}
    environment:
      DB_HOST_ADMIN: {{ env.DB_HOST_ADMIN }}
      DB_PORT_ADMIN: {{ env.DB_PORT_ADMIN }}
      DB_NAME_ADMIN: {{ env.DB_NAME_ADMIN }}
      POSTGRES_PASSWORD: {{ env.POSTGRES_PASSWORD }}
      POSTGRES_USER: {{ env.POSTGRES_USER }}
      DJANGO_SECRET_KEY: {{ env.DJANGO_SECRET_KEY }}
      DJANGO_ALLOWED_HOSTS: {{ env.DJANGO_ALLOWED_HOSTS }}
      DJANGO_DEBUG_FLAG: {{ env.DJANGO_DEBUG_FLAG }}
      DJANGO_SUPERUSER_USERNAME: {{ env.DJANGO_SUPERUSER_USERNAME }}
      DJANGO_SUPERUSER_PASSWORD: {{ env.DJANGO_SUPERUSER_PASSWORD }}
      DJANGO_SUPERUSER_EMAIL: {{ env.DJANGO_SUPERUSER_EMAIL }}
    entrypoint: sh -c "python wait_for_pg.py && python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8011"
    volumes:
      - static_volume:/billing/static
      - django_logs:/billing/logs
    expose:
      - "8011"
    depends_on:
      - db

  jaeger:
    container_name: jaeger_auth
    image: jaegertracing/all-in-one:latest
    ports:
        - "6833:6833/udp"
        - "16686:16686"

  redis:
    container_name: redis_auth
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-redis:{{ env.IMAGE_TAG }}
    ports:
      - "6380:6380"
    depends_on:
      - auth_service

  db:
    container_name: billing_db
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-postgres:{{ env.IMAGE_TAG }}
    ports:
      - "5432:5432"
    environment:
      POSTGRES_MULTIPLE_DATABASES: {{ env.POSTGRES_MULTIPLE_DATABASES }}
      POSTGRES_PASSWORD: {{ env.POSTGRES_PASSWORD }}
      POSTGRES_USER: {{ env.POSTGRES_USER }}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  nginx:
    container_name: billing_nginx
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-nginx:{{ env.IMAGE_TAG }}
    volumes:
      - certbot-conf:/etc/nginx/ssl/:ro
      - certbot-www:/var/www/certbot/:ro
      - static_volume:/home/app/static
      - nginx_logs:/var/log/nginx/
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - service
      - admin_service
      - auth_service

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-conf:/etc/letsencrypt/:rw
      - certbot-www:/var/www/certbot/:rw
    command: renew --dry-run
    depends_on:
      - nginx

  elasticsearch:
    container_name: elasticsearch
    image: elastic/elasticsearch:7.10.1
    environment:
      discovery.type: single-node
    ports:
      - "9200"
    volumes:
      - elastic:/tmp/elasticsearch/data

  logstash:
    container_name: logstash
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-logstash:{{ env.IMAGE_TAG }}
    depends_on:
      - elasticsearch
    ports:
      - "12201/udp"
    command: logstash -f /config/logstash.conf

  kibana:
    container_name: kibana
    image: elastic/kibana:7.10.1
    environment:
      SERVER_BASEPATH: /kibana
    ports:
      - "5601"
    depends_on:
      - elasticsearch

  filebeat:
    container_name: filebeat
    image: cr.yandex/crpis5t0f3nv1ncr2fe9/billing-filebeat:{{ env.IMAGE_TAG }}
    command: filebeat -e -strict.perms=false
    volumes:
      - nginx_logs:/var/log/nginx:ro
      - django_logs:/var/log/django:ro
      - auth_log:/var/log/auth:ro
      - billing_log:/var/log/billing:ro
    depends_on:
      - nginx

volumes:
  postgres_data:
  certbot-conf:
  certbot-www:
  static_volume:
  nginx_logs:
  elastic:
  django_logs:
  auth_log:
  billing_log:
